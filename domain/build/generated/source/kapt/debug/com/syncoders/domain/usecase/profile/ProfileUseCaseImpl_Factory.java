// Generated by Dagger (https://dagger.dev).
package com.syncoders.domain.usecase.profile;

import com.syncoders.domain.repository.profile.ProfileRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation"
})
public final class ProfileUseCaseImpl_Factory implements Factory<ProfileUseCaseImpl> {
  private final Provider<ProfileRepository> profileRepositoryProvider;

  public ProfileUseCaseImpl_Factory(Provider<ProfileRepository> profileRepositoryProvider) {
    this.profileRepositoryProvider = profileRepositoryProvider;
  }

  @Override
  public ProfileUseCaseImpl get() {
    return newInstance(profileRepositoryProvider.get());
  }

  public static ProfileUseCaseImpl_Factory create(
      Provider<ProfileRepository> profileRepositoryProvider) {
    return new ProfileUseCaseImpl_Factory(profileRepositoryProvider);
  }

  public static ProfileUseCaseImpl newInstance(ProfileRepository profileRepository) {
    return new ProfileUseCaseImpl(profileRepository);
  }
}
