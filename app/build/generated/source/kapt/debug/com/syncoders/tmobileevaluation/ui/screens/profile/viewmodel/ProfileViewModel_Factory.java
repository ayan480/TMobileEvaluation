// Generated by Dagger (https://dagger.dev).
package com.syncoders.tmobileevaluation.ui.screens.profile.viewmodel;

import com.syncoders.data.dataSource.sharedPreferences.SharedPreferencesHelper;
import com.syncoders.domain.usecase.profile.ProfileUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation"
})
public final class ProfileViewModel_Factory implements Factory<ProfileViewModel> {
  private final Provider<ProfileUseCase> profileUseCaseProvider;

  private final Provider<SharedPreferencesHelper> sharedPreferencesHelperProvider;

  public ProfileViewModel_Factory(Provider<ProfileUseCase> profileUseCaseProvider,
      Provider<SharedPreferencesHelper> sharedPreferencesHelperProvider) {
    this.profileUseCaseProvider = profileUseCaseProvider;
    this.sharedPreferencesHelperProvider = sharedPreferencesHelperProvider;
  }

  @Override
  public ProfileViewModel get() {
    return newInstance(profileUseCaseProvider.get(), sharedPreferencesHelperProvider.get());
  }

  public static ProfileViewModel_Factory create(Provider<ProfileUseCase> profileUseCaseProvider,
      Provider<SharedPreferencesHelper> sharedPreferencesHelperProvider) {
    return new ProfileViewModel_Factory(profileUseCaseProvider, sharedPreferencesHelperProvider);
  }

  public static ProfileViewModel newInstance(ProfileUseCase profileUseCase,
      SharedPreferencesHelper sharedPreferencesHelper) {
    return new ProfileViewModel(profileUseCase, sharedPreferencesHelper);
  }
}
