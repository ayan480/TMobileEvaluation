// Generated by Dagger (https://dagger.dev).
package com.syncoders.data.repository.auth;

import com.syncoders.data.dataSource.local.authDao.UserDao;
import com.syncoders.tmobileevaluation.data.remote.auth.AuthApiClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation"
})
public final class AuthRepositoryImpl_Factory implements Factory<AuthRepositoryImpl> {
  private final Provider<AuthApiClient> authApiClientProvider;

  private final Provider<UserDao> userDaoProvider;

  public AuthRepositoryImpl_Factory(Provider<AuthApiClient> authApiClientProvider,
      Provider<UserDao> userDaoProvider) {
    this.authApiClientProvider = authApiClientProvider;
    this.userDaoProvider = userDaoProvider;
  }

  @Override
  public AuthRepositoryImpl get() {
    return newInstance(authApiClientProvider.get(), userDaoProvider.get());
  }

  public static AuthRepositoryImpl_Factory create(Provider<AuthApiClient> authApiClientProvider,
      Provider<UserDao> userDaoProvider) {
    return new AuthRepositoryImpl_Factory(authApiClientProvider, userDaoProvider);
  }

  public static AuthRepositoryImpl newInstance(AuthApiClient authApiClient, UserDao userDao) {
    return new AuthRepositoryImpl(authApiClient, userDao);
  }
}
