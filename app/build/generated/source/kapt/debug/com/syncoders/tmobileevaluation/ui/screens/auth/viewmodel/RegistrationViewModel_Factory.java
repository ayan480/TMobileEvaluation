// Generated by Dagger (https://dagger.dev).
package com.syncoders.tmobileevaluation.ui.screens.auth.viewmodel;

import com.syncoders.data.dataSource.sharedPreferences.SharedPreferencesHelper;
import com.syncoders.domain.usecase.auth.AuthUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation"
})
public final class RegistrationViewModel_Factory implements Factory<RegistrationViewModel> {
  private final Provider<AuthUseCase> authUseCaseProvider;

  private final Provider<SharedPreferencesHelper> sharedPreferencesHelperProvider;

  public RegistrationViewModel_Factory(Provider<AuthUseCase> authUseCaseProvider,
      Provider<SharedPreferencesHelper> sharedPreferencesHelperProvider) {
    this.authUseCaseProvider = authUseCaseProvider;
    this.sharedPreferencesHelperProvider = sharedPreferencesHelperProvider;
  }

  @Override
  public RegistrationViewModel get() {
    return newInstance(authUseCaseProvider.get(), sharedPreferencesHelperProvider.get());
  }

  public static RegistrationViewModel_Factory create(Provider<AuthUseCase> authUseCaseProvider,
      Provider<SharedPreferencesHelper> sharedPreferencesHelperProvider) {
    return new RegistrationViewModel_Factory(authUseCaseProvider, sharedPreferencesHelperProvider);
  }

  public static RegistrationViewModel newInstance(AuthUseCase authUseCase,
      SharedPreferencesHelper sharedPreferencesHelper) {
    return new RegistrationViewModel(authUseCase, sharedPreferencesHelper);
  }
}
